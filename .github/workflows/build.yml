# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# SPDX-FileCopyrightText: Â© Vegard IT GmbH (https://vegardit.com)
# SPDX-FileContributor: Sebastian Thomschke
# SPDX-License-Identifier: Apache-2.0
# SPDX-ArtifactOfProjectHomePage: https://github.com/vegardit/depcheck-maven-plugin
#
name: Build

on:
  push:
    branches-ignore: # build all branches except:
      - 'dependabot/**' # prevent GHA triggered twice (once for commit to the branch and once for opening/syncing the PR)
    tags-ignore: # don't build tags
    - '**'
    paths-ignore:
    - '**/*.adoc'
    - '**/*.md'
    - '.editorconfig'
    - '.git*'
    - '.github/*.yml'
  pull_request:
  workflow_dispatch:
    # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/
    inputs:
      additional_maven_args:
        description: 'Additional Maven Args'
        required: false
        default: ''
      debug-with-ssh:
        description: "Start an SSH session for debugging purposes after tests ran:"
        default: never
        type: choice
        options: [ always, on_failure, on_failure_or_cancelled, never ]
      debug-with-ssh-only-for-actor:
        description: "Limit access to the SSH session to the GitHub user that triggered the job."
        default: true
        type: boolean
      debug-with-ssh-only-jobs-matching:
        description: "Only start an SSH session for jobs matching this regex pattern:"
        default: ".*"
        type: string

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency: ci-${{ github.ref }}

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - java: 11
          may_create_release: ${{ github.ref_name == 'main' }}
          experimental: false
        - java: 17
          may_create_release: false
          experimental: false
        - java: 20
          may_create_release: false
          experimental: false
    steps:
    - name: Show environment variables
      run: env | sort

    - name: Git Checkout
      uses: actions/checkout@v4 #https://github.com/actions/checkout

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3 #https://github.com/actions/setup-java
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}

    # reusing CDS archives of the same JVM randomly fails in GitHub Actions with
    # "An error has occurred while processing the shared archive file. shared class paths mismatch"
    #- name: Calculate Java version checksum
    #  id: java-version-checksum
    #  run: |
    #    echo "md5sum=$(java -version 2>&1 | md5sum | cut -f1 -d" ")" >> $GITHUB_OUTPUT
    #- name: Cache Java CDS archive
    #  uses: actions/cache@v3
    #  with:
    #    path: |
    #      ~/.xshare/${{ steps.java-version-checksum.outputs.md5sum }}
    #    key: ${{ runner.os }}-xshare-${{ steps.java-version-checksum.outputs.md5sum }}

    - name: "Cache: Local Maven Repository"
      uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/com/vegardit/maven
        key: ${{ runner.os }}-mvnrepo-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-mvnrepo-

    - name: "Cache: Maven Binaries"
      uses: actions/cache@v3
      with:
        path: |
          ~/.m2/bin
        key: ${{ runner.os }}-mvnbin-${{ hashFiles('.ci/build.sh') }}

    - name: Test with Maven
      id: maven-test
      if: ${{ !matrix.may_create_release || env.ACT }}
      env:
        GITHUB_USER: ${{ github.actor }}
        GITHUB_API_KEY: ${{ github.token }}
        JAVA_VERSION: ${{ matrix.java }}
        MAY_CREATE_RELEASE: false
      run: |
        bash .ci/build.sh ${{ github.event.inputs.additional_maven_args }}

    - name: Build with Maven
      id: maven-build
      if: ${{ matrix.may_create_release && !env.ACT }}
      env:
        DEPLOY_SNAPSHOTS_TO_GITHUB_BRANCH: true
        GITHUB_USER: ${{ github.actor }}
        GITHUB_API_KEY: ${{ secrets.GH_API_TOKEN }}
        JAVA_VERSION: ${{ matrix.java }}
        MAY_CREATE_RELEASE: true
        SIGN_KEY: ${{ secrets.GPG_SIGN_KEY }}
        SIGN_KEY_PASS: ${{ secrets.GPG_SIGN_KEY_PWD }}
        SONATYPE_OSSRH_USER: ${{ secrets.SONATYPE_OSSRH_USER }}
        SONATYPE_OSSRH_USER_TOKEN: ${{ secrets.SONATYPE_OSSRH_USER_TOKEN }}
      run: |
        set -eu

        # https://github.community/t/github-actions-bot-email-address/17204
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        bash .ci/build.sh ${{ github.event.inputs.additional_maven_args }}

        if find . -path "*/target/site/jacoco/jacoco.xml" | grep -q .; then
          echo 'has_jacoco_results=true' >> $GITHUB_OUTPUT
        fi

    - name: Publish test coverage to codeclimate.com
      uses: paambaati/codeclimate-action@v5.0.0 # https://github.com/paambaati/codeclimate-action
      if: ${{ matrix.may_create_release && steps.maven-build.outputs.has_jacoco_results && !env.ACT }}
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_TEST_REPORTER_ID }}
        JACOCO_SOURCE_PATH: "${{ github.workspace }}/src/main/java"
      with:
        coverageLocations:  |
          ${{ github.workspace }}/target/site/jacoco/jacoco.xml:jacoco
          ${{ github.workspace }}/target/site/jacoco-it/jacoco.xml:jacoco


    ##################################################
    # Setup SSH debug session
    ##################################################
    - name: "SSH session for debugging: check"
      id: DEBUG_SSH_SESSSION_CHECK
      if: always()
      shell: bash
      run: |
        set -eu
        job_filter_pattern="${{ inputs.debug-with-ssh-only-jobs-matching }}"
        echo "job_filter: $job_filter_pattern"

        job_info=$(echo "$GITHUB_JOB ${{ runner.os }} haxe-${{ matrix.haxe-version }}" | tr -d '\n')
        echo "job_info: $job_info"

        if [[ "$job_info" =~ .*$job_filter_pattern.* ]] && case "${{ job.status }}" in
           success)   [[ "${{ inputs.debug-with-ssh }}" == always ]] ;;
           cancelled) [[ "${{ inputs.debug-with-ssh }}" == on_failure_or_cancelled ]] ;;
           failure)   [[ "${{ inputs.debug-with-ssh }}" =~ on_failure.* ]] ;;
        esac; then
           echo "start_session=true" | tee -a "$GITHUB_OUTPUT"
        fi

    - name: "SSH session for debugging: start"
      uses: mxschmitt/action-tmate@v3 # https://github.com/mxschmitt/action-tmate
      if: always() && steps.DEBUG_SSH_SESSSION_CHECK.outputs.start_session
      with:
        limit-access-to-actor: ${{ inputs.debug-with-ssh-only-for-actor }}
